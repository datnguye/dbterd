# dbterd Configuration File (dbt Core)
# CLI arguments take precedence over these settings
# See https://dbterd.datnguyen.de for full documentation

# Output Settings
# ---------------
# Target platform for diagram generation
# Options: dbml, mermaid, plantuml, graphviz, d2, drawdb
target: {default_target}

# Output directory path (default: ./target)
output: {default_output}

# Output file name (optional - defaults are defined per target)
# output-file-name: schema.dbml

# Selection & Filtering
# ---------------------
# Include specific models/resources (supports wildcards)
select:
  # - fct_*
  # - dim_*

# Exclude specific models/resources (supports wildcards)
exclude:
  # - stg_*

# Resource types to include in diagram
# Options: model, source
resource-type:
{resource_types}

# Relationship Detection
# ----------------------
# Algorithm for detecting relationships between entities
# Options: test_relationship, semantic
algo: {default_algo}

# Entity Naming
# -------------
# Format for entity node names
# Options: resource.package.model, schema.table, model, etc.
entity-name-format: {default_entity_name_format}

# Omit double quotes in entity names (dbml only)
omit-entity-name-quotes: {default_omit_entity_name_quotes}

# Display Options
# ---------------
# Omit columns in diagram (mermaid only)
omit-columns: {default_omit_columns}

# dbt Core Integration
# --------------------
# Path to dbt artifact directory (default: ./target)
artifacts-dir: {default_artifact_path}

# dbt project directory for programmatic invocation
dbt-project-dir: {default_dbt_project_dir}

# Use dbt's selection syntax with programmatic invocation
dbt: {default_dbt}

# Auto-generate dbt artifacts before running
dbt-auto-artifacts: {default_dbt_auto_artifacts}
